trigger:
  branches:
    include:
    - refs/heads/main
    - refs/heads/release/*

pool:
  vmImage: ubuntu-latest

parameters:
  - name: deployNonProd
    displayName: Deploy to NonProd
    type: boolean
    default: false

resources:
  repositories:
  - repository: self
  - repository: platformSubscription
    type: github
    endpoint: 'CodeBuildDeploy-com'
    name: 'CodeBuildDeploy-com/CodeBuildDeploy.Platform.Subscription'

variables:
# Group variables
- group: CodeBuildDeploy-Global

- template: .ado/variables-infrastructure.yml@platformSubscription

- template: .ado/variables-build.yml@platformSubscription
- template: variables-env.yml
  parameters:
    isManual: ${{ variables['build.type.manual'] }}
    isRelease: ${{ variables['build.type.release'] }}
    deployNonProd: ${{ parameters.deployNonProd }}

# Versioning
- template: .ado/variables-versioning.yml@platformSubscription
  parameters:
    buildTypeRelease: ${{ variables['build.type.release'] }}
    majorVersion: 1
    minorVersion: 0

name: $[variables['Build.Number']]

stages:
- stage: Build
  displayName: Build
  jobs:
  - job: Init_Vars
    displayName: Init Vars
    steps:
    - checkout: self
      displayName: 'Checkout Repo'

    - bash: |
        echo "build.type.release = $(build.type.release)"
        echo "SourceVersion = $(Build.SourceVersion)"
        echo "SourceVersion.Short = $(Build.SourceVersion.Short)"
        echo "Build Number = $(Build.Number)"
        echo "Version Assembly = $(Version.Assembly)"
        echo "Version File = $(Version.File)"
        echo "Version Informational = $(Version.Informational)"
        echo "Version Major = $(Version.Major)"
        echo "Version Minor = $(Version.Minor)"
        echo "Version Patch = $(Version.Patch)"
      displayName: Output Version

  - ${{ if ne(variables['Build.Reason'], 'PullRequest') }}:
    - job: Tag_Version
      displayName: Tag Version
      dependsOn:
        - Init_Vars
      steps:
      - checkout: self
        displayName: 'Checkout Repo'
        persistCredentials: true

      - script: |
          git tag $(Build.Number)
          git push origin $(Build.Number)
        workingDirectory: $(Build.SourcesDirectory)
        displayName: Tag Version in Git

- ${{ if eq(variables['deploy.nonprod'], 'true') }}:
  - stage: Provision_NonProd
    displayName: Provision NonProd Platform
    dependsOn:
      - Build
    jobs:
    - deployment: Provision_Platform_NonProd
      displayName: Provision NonProd Platform
      environment: NonProd
      strategy:
        runOnce:
          deploy:
            steps:
            - template: .ado/template-terraform.yml@platformSubscription
              parameters: 
                service_connection: '$(Azure.Subscription.NonProdEnterprise)'
                terraform_work_directory: '$(Build.SourcesDirectory)/terraform'
                tfstate_rg_name: $(Tf.State.NonProdEnterprise.RG)
                tfstate_storage_account_name: $(Tf.State.NonProdEnterprise.SA)
                tfstate_blob_name: $(Tf.State.NonProdEnterprise.Blob)
                tfstate_file_name: 'nonprod'
                spoke_vars_file_name: 'nonprod'
                additional_command_options: ''
            
  - ${{ if eq(variables['deploy.prod'], 'true') }}:

    - stage: Provision_Prod
      displayName: Provision Prod Platform
      dependsOn:
        - Provision_NonProd
      jobs:
      - deployment: Provision_Platform_Prod
        displayName: Provision Prod Platform
        environment: Prod
        strategy:
          runOnce:
            deploy:
              steps:
              - template: .ado/template-terraform.yml@platformSubscription
                parameters: 
                  service_connection: '$(Azure.Subscription.ProdPremium)'
                  terraform_work_directory: '$(Build.SourcesDirectory)/terraform'
                  tfstate_rg_name: $(Tf.State.ProdPremium.RG)
                  tfstate_storage_account_name: $(Tf.State.ProdPremium.SA)
                  tfstate_blob_name: $(Tf.State.ProdPremium.Blob)
                  tfstate_file_name: 'prod'
                  spoke_vars_file_name: 'prod'
                  additional_command_options: ''