trigger:
  branches:
    include:
    - refs/heads/main
    - refs/heads/release/*

pool:
  vmImage: ubuntu-latest

resources:
- repo: self

variables:
# Group variables
- group: CodeBuildDeploy-Global

# Service Connections
- name: ARM_Service_Connection_Prod
  value: codebuilddeploy-terraform
- name: ARM_Service_Connection_NonProd
  value: codebuilddeploy-terraform-non-prod

# Branch Variables
- name: isMain
  value: $[eq(variables['Build.SourceBranch'], 'refs/heads/main')]
- name: isRelease
  value: $[startsWith(variables['Build.SourceBranch'], 'refs/heads/release/')]
- name: isPullRequest
  value: $[eq(variables['Build.Reason'], 'PullRequest')]

# Versioning
- template: variables-versioning.yml

# Terraform Storage
- name: tfstate_rg_name_nonprod
  value: 'tfstate-codebuilddeploy-rg'
- name: tfstate_storage_account_name_nonprod
  value: 'tfstatecbdnpd'
- name: tfstate_blob_name_nonprod
  value: 'tfstate-codebuilddeploy-blobc'

name: $[variables['Build.Number']]

stages:
- stage: Build_Umbrella
  displayName: Build Umbrella
  jobs:
  - job: Init_Vars
    displayName: Init Vars
    steps:
    - checkout: self
      displayName: 'Checkout Repo'

    - bash: |
        echo "isMain = $(isMain)"
        echo "isRelease = $(isRelease)"
        echo "isPullRequest = $(isPullRequest)"
        echo "SourceVersion = $(Build.SourceVersion)"
        echo "SourceVersion.Short = $(Build.SourceVersion.Short)"
        echo "Build Number = $(Build.Number)"
        echo "Version Assembly = $(Version.Assembly)"
        echo "Version File = $(Version.File)"
        echo "Version Informational = $(Version.Informational)"
        echo "Version Major = $(Version.Major)"
        echo "Version Minor = $(Version.Minor)"
        echo "Version Patch = $(Version.Patch)"
      displayName: Output Version

  - ${{ if ne(variables['Build.Reason'], 'PullRequest') }}:
    - job: Tag_Version
      displayName: Tag Version
      dependsOn:
        - Init_Vars
      steps:
      - checkout: self
        displayName: 'Checkout Repo'
        persistCredentials: true

      - script: |
          git tag $(Build.Number)
          git push origin $(Build.Number)
        workingDirectory: $(Build.SourcesDirectory)
        displayName: Tag Version in Git

- stage: Provision_NonProd
  displayName: Provision NonProd Infra
  dependsOn:
    - Build_Umbrella
  jobs:
  - job: Init_TFState
    displayName: Init NonProd TFState
    steps:
    - template: create-tfstate-storage.yml
      parameters:
        location: 'uksouth'
        service_connection: $(ARM_Service_Connection_NonProd)
        resource_group_name: $(tfstate_rg_name_nonprod)
        storage_account_name: $(tfstate_storage_account_name_nonprod)
        container_blob_name: $(tfstate_blob_name_nonprod)

  - deployment: Provision_Platform_Global
    displayName: Provision Global Platform
    environment: Global
    dependsOn:
      - Init_TFState
    strategy:
      runOnce:
        deploy:
          steps:
          - template: template-terraform.yml
            parameters: 
              service_connection: '$(ARM_Service_Connection_NonProd)'
              terraform_work_directory: '$(Build.SourcesDirectory)/terraform/global'
              tfstate_rg_name: $(tfstate_rg_name_nonprod)
              tfstate_storage_account_name: $(tfstate_storage_account_name_nonprod)
              tfstate_blob_name: $(tfstate_blob_name_nonprod)
              tfstate_file_name: 'global'
              spoke_vars_file_name: 'global'
              additional_command_options: ''

  - deployment: Provision_Platform_NonProd
    displayName: Provision NonProd Platform
    environment: NonProd
    dependsOn:
      - Provision_Platform_Global
    strategy:
      runOnce:
        deploy:
          steps:
          - template: template-terraform.yml
            parameters: 
              service_connection: '$(ARM_Service_Connection_NonProd)'
              terraform_work_directory: '$(Build.SourcesDirectory)/terraform/platform_env'
              tfstate_rg_name: $(tfstate_rg_name_nonprod)
              tfstate_storage_account_name: $(tfstate_storage_account_name_nonprod)
              tfstate_blob_name: $(tfstate_blob_name_nonprod)
              tfstate_file_name: 'nonprod'
              spoke_vars_file_name: 'nonprod'
              additional_command_options: '-var="platform_env=nonprod"'

  - ${{ if and(ne(variables['Build.SourceBranch'], 'refs/heads/main'), ne(startsWith(variables['Build.SourceBranch'], 'refs/heads/release/'), 'True')) }}:
    - deployment: Provision_AppEnv_Dyn
      displayName: Provision NonProd Dyn App Environment
      environment: NonProd-Dyn
      dependsOn:
        - Provision_Platform_NonProd
      strategy:
        runOnce:
          deploy:
            steps:
            - template: template-terraform.yml
              parameters: 
                service_connection: '$(ARM_Service_Connection_NonProd)'
                terraform_work_directory: '$(Build.SourcesDirectory)/terraform/app_env'
                tfstate_rg_name: $(tfstate_rg_name_nonprod)
                tfstate_storage_account_name: $(tfstate_storage_account_name_nonprod)
                tfstate_blob_name: $(tfstate_blob_name_nonprod)
                tfstate_file_name: 'nonprod-dyn-$(Build.SourceVersion.Short)'
                spoke_vars_file_name: 'dyn'
                additional_command_options: '-var="platform_env=nonprod" -var="app_env=dyn-$(Build.SourceVersion.Short)"'

  - ${{ if or(eq(variables['Build.SourceBranch'], 'refs/heads/main'), startsWith(variables['Build.SourceBranch'], 'refs/heads/release/')) }}:
    - deployment: Provision_AppEnv_Dev
      displayName: Provision NonProd Dev App Environment
      environment: NonProd-Dev
      dependsOn:
        - Provision_Platform_NonProd
      strategy:
        runOnce:
          deploy:
            steps:
            - template: template-terraform.yml
              parameters: 
                service_connection: '$(ARM_Service_Connection_NonProd)'
                terraform_work_directory: '$(Build.SourcesDirectory)/terraform/app_env'
                tfstate_rg_name: $(tfstate_rg_name_nonprod)
                tfstate_storage_account_name: $(tfstate_storage_account_name_nonprod)
                tfstate_blob_name: $(tfstate_blob_name_nonprod)
                tfstate_file_name: 'nonprod-dev'
                spoke_vars_file_name: 'dev'
                additional_command_options: '-var="platform_env=nonprod" -var="app_env=dev"'