trigger:
  branches:
    include:
    - refs/heads/main
    - refs/heads/release/*

pool:
  vmImage: ubuntu-latest

parameters:
  - name: deployNonProd
    displayName: Deploy to NonProd
    type: boolean
    default: false

resources:
- repo: self

variables:
# Group variables
- group: CodeBuildDeploy-Global

- template: variables-infrastructure.yml

- template: variables-build.yml
  parameters:
    deployNonProd: ${{ parameters.deployNonProd }}

# Versioning
- template: variables-versioning.yml
  parameters:
    buildTypeRelease: ${{ variables['build.type.release'] }}
    majorVersion: 1
    minorVersion: 0

name: $[variables['Build.Number']]

stages:
- stage: Build
  displayName: Build
  jobs:
  - job: Init_Vars
    displayName: Init Vars
    steps:
    - checkout: self
      displayName: 'Checkout Repo'

    - bash: |
        echo "build.type.release = $(build.type.release)"
        echo "SourceVersion = $(Build.SourceVersion)"
        echo "SourceVersion.Short = $(Build.SourceVersion.Short)"
        echo "Build Number = $(Build.Number)"
        echo "Version Assembly = $(Version.Assembly)"
        echo "Version File = $(Version.File)"
        echo "Version Informational = $(Version.Informational)"
        echo "Version Major = $(Version.Major)"
        echo "Version Minor = $(Version.Minor)"
        echo "Version Patch = $(Version.Patch)"
      displayName: Output Version

  - ${{ if ne(variables['Build.Reason'], 'PullRequest') }}:
    - job: Tag_Version
      displayName: Tag Version
      dependsOn:
        - Init_Vars
      steps:
      - checkout: self
        displayName: 'Checkout Repo'
        persistCredentials: true

      - script: |
          git tag $(Build.Number)
          git push origin $(Build.Number)
        workingDirectory: $(Build.SourcesDirectory)
        displayName: Tag Version in Git

- ${{ if eq(variables['deploy.nonprod'], 'true') }}:
  - stage: Provision_NonProd
    displayName: Provision NonProd Infra
    dependsOn:
      - Build
    jobs:
    - job: Init_TFState
      displayName: Init NonProd TFState
      steps:
      - template: create-tfstate-storage.yml
        parameters:
          location: 'uksouth'
          service_connection: $(Azure.Subscription.NonProd)
          resource_group_name: $(Tf.State.NonProd.RG)
          storage_account_name: $(Tf.State.NonProd.SA)
          container_blob_name: $(Tf.State.NonProd.Blob)

    - deployment: Provision_Platform_Global
      displayName: Provision Global Platform
      environment: Global
      dependsOn:
        - Init_TFState
      strategy:
        runOnce:
          deploy:
            steps:
            - template: template-terraform.yml
              parameters: 
                service_connection: '$(Azure.Subscription.NonProd)'
                terraform_work_directory: '$(Build.SourcesDirectory)/terraform/global'
                tfstate_rg_name: $(Tf.State.NonProd.RG)
                tfstate_storage_account_name: $(Tf.State.NonProd.SA)
                tfstate_blob_name: $(Tf.State.NonProd.Blob)
                tfstate_file_name: 'global'
                spoke_vars_file_name: 'global'
                additional_command_options: ''

    - deployment: Provision_Platform_NonProd
      displayName: Provision NonProd Platform
      environment: NonProd
      dependsOn:
        - Provision_Platform_Global
      strategy:
        runOnce:
          deploy:
            steps:
            - template: template-terraform.yml
              parameters: 
                service_connection: '$(Azure.Subscription.NonProd)'
                terraform_work_directory: '$(Build.SourcesDirectory)/terraform/platform_env'
                tfstate_rg_name: $(Tf.State.NonProd.RG)
                tfstate_storage_account_name: $(Tf.State.NonProd.SA)
                tfstate_blob_name: $(Tf.State.NonProd.Blob)
                tfstate_file_name: 'nonprod'
                spoke_vars_file_name: 'nonprod'
                additional_command_options: '-var="platform_env=nonprod"'